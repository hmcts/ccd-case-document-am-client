buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
  }
}

plugins {
  id 'checkstyle'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'org.springframework.boot' version '2.4.2'
  id 'uk.gov.hmcts.java' version '0.12.2'
  id 'com.github.ben-manes.versions' version '0.36.0'
  id "com.jfrog.bintray" version "1.8.5"
}

apply plugin: 'checkstyle'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def versions = [
    junit       : '5.6.2',
    lombok      : '1.18.8',
    springCloud : 'Finchley.RELEASE'
]

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "1.0.0"

group 'uk.gov.hmcts.reform'
version buildNumber

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

compileJava {
  options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
  options.compilerArgs << '-Xlint:deprecation'
}

repositories {
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  maven {
    url 'https://repo.spring.io/libs-milestone'
  }
  jcenter()
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
  }
}

task printVersion {
  doLast {
    print project.version
  }
}

def pomConfig = {
  licenses {
    license {
      name "MIT License"
      url "http://www.opensource.org/licenses/mit-license.php"
      distribution "repo"
    }
  }

  scm {
    url "https://github.com/hmcts/ccd-case-document-am-client"
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier.set('sources')
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier.set('javadoc')
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

publishing {
  publications {
    Main(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
      groupId project.group
      artifactId 'ccd-case-document-am-client'
      version project.version

      pom.withXml {
        def root = asNode()
        root.appendNode('description', 'Client library for communicating with CCD case document am client api')
        root.appendNode('name', 'CCD case document am client')
        root.appendNode('url', 'https://github.com/hmcts/ccd-case-document-am-client')

        root.children().last() + pomConfig
      }
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['Main']
  publish = true
  pkg {
    repo = 'hmcts-maven'
    name = 'ccd-case-document-am-client'
    userOrg = 'hmcts'
    licenses = ['MIT']
    vcsUrl = 'https://github.com/hmcts/ccd-case-document-am-client'
    version {
      name = project.version
    }
  }
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}"
  }
}

sourceSets {
  functionalTest {
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task functionalTest(type: Test) {
  description = 'Runs functional tests.'
  group = 'verification'

  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'io.github.openfeign', name: 'feign-jackson'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.0.1'

  compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.19.0'
  testImplementation group: 'com.google.guava', name: 'guava', version: '27.0-jre'

  functionalTestImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '2.0.1'
  functionalTestImplementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.3.0'
  functionalTestImplementation group: 'org.assertj', name: 'assertj-core', version: '3.12.1'
  functionalTestImplementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.9.8'

  functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

tasks.withType(Test) {
  useJUnitPlatform()
}

bootJar {
  enabled = false
}

jar {
  enabled = true
}
